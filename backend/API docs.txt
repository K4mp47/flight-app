User con ruoli, per spiegazione dei ruoli andare ad API 6) users/<int:user_id>/change-role
id 2 email mario.rossi@example.com Ruolo -> Admain
id 7 email Monkey.D.Rufy@gmail.com Ruolo -> Airline-Admin


------------------------------------------------------------------------------------------------------------------
1) /users/register  methods=["POST"]

API che serve per creare un utente e aggiungerlo sul db e in caso di sucesso restituisce il token.

Parametri:

body {
  "name": "Rufy",
  "lastname": "Monkey D. ",
  "email": "Monkey.D.Rufy@gmail.com",
  "pwd": "Password123!",
  "pwd2": "Password123!"
}

Vincoli sui Parametri:
la password deve avere almeno 1 lettera maiuscola, 1 numero e 1 carattere speciale.
la password deve essere almeno lunga 8 caratteri.


risposta 200

{
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1Mzc0OTIxOSwianRpIjoiNWEwNjBlMmEtMDkxYy00NWYwLTkyZDItYjQ1MDkzZTFiY2U4IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjEwIiwibmJmIjoxNzUzNzQ5MjE5LCJjc3JmIjoiMjRlOWU5ZmItNTJhYy00ZmY3LWJlMWEtNTRlYzI4MTgwNDExIiwiZXhwIjoxNzUzNzUwMTE5LCJyb2xlIjoiVXNlciJ9.xGYux7jTXegf38-mL9VQU6MuzlLpC9ytVBgnzHhQ5oc",
    "message": "User registered"
}

------------------------------------------------------------------------------------------------------------------


2) /users/login methods=["POST"]

API che serve per autenticare un utente e restituisce il token

body {
  "email": "Zoro.Roronoa@gmail.com",
  "pwd": "Password123!"
}

risposta 200

{
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1Mzc0OTYzNywianRpIjoiYTE1ZTdkYTAtYTk1Yy00NWNmLWJiYTUtZmI2NjI2MmE1NjY2IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjEwIiwibmJmIjoxNzUzNzQ5NjM3LCJjc3JmIjoiYmY0OTljY2ItNDY4Mi00MDhlLWI4N2MtYTIwY2VlMmZiYjQzIiwiZXhwIjoxNzUzNzUwNTM3LCJyb2xlIjoiVXNlciJ9.bJL7wMq0SfZA1EbScTpx2ypl0YXvk0Ao5V7Fc3VitvA"
}

------------------------------------------------------------------------------------------------------------------


3) /users/me methods=["GET"]

API che restituisce le informazioni base di un utente, per accederci bisogna essere autenticati.

Authorization Bearer token_utente

risposta 200

{
    "email": "Sanji.Vinsmoke@gmail.com",
    "lastname": "Vinsmoke",
    "name": "Sanji"
}


------------------------------------------------------------------------------------------------------------------

4) /users/logout  methods=["POST"]

API che elimina il token jwt che gli viene passato

Authorization Bearer token_utente

risposta 200

{
    "msg": "Logout successful"
}


------------------------------------------------------------------------------------------------------------------

5) /users/ methods=["GET"]

API che ritorna tutti gli users presenti sul db in formato JSON, per usarla bisogna avere ruolo Admin, per spiegazioni ruoli guardare API 6.

Ruoli -> Admin

Authorization Bearer token_utente

risposta 200

[
    {
        "email": "mario.rossi@example.com",
        "id_user": 2,
        "lastname": "Rossi",
        "name": "Mario",
        "role": {
            "id_role": 1,
            "name": "Admin"
        }
    },
    {
        "email": "il.rossi@sssssssss.com",
        "id_user": 4,
        "lastname": "Fiedorov",
        "name": "Oscar",
        "role": {
            "id_role": 3,
            "name": "Airline-Admin"
        }
    },
    {
        "email": "Zoro.Roronoa@gmail.com",
        "id_user": 8,
        "lastname": "Roronoa",
        "name": "Zoro",
        "role": {
            "id_role": 2,
            "name": "User"
        }
    },
    {
        "email": "Nico.Robin@gmail.com",
        "id_user": 9,
        "lastname": "Robin",
        "name": "Nico",
        "role": {
            "id_role": 2,
            "name": "User"
        }
    },
    {
        "email": "Sanji.Vinsmoke@gmail.com",
        "id_user": 10,
        "lastname": "Vinsmoke",
        "name": "Sanji",
        "role": {
            "id_role": 2,
            "name": "User"
        }
    },
    {
        "email": "Monkey.D.Rufy@gmail.com",
        "id_user": 7,
        "lastname": "Monkey D. ",
        "name": "Rufy",
        "role": {
            "id_role": 2,
            "name": "User"
        }
    }
]


------------------------------------------------------------------------------------------------------------------

6) users/<int:user_id>/change-role methods=["PUT"]

API serve a modificare il ruolo di un utente.

Ruoli -> Admin

Quali sono i ruoli possibili?

Admin          id : 1
User           id : 2
Airline-Admin  id : 3

il ruolo è inserito dentro i token così da impedire che gli utenti possono usare tutte le API

<int:user_id> -> numero id dell' utente, se si vogliono cambiare i permessi all' utente 123 -> users/123/change-role

Authorization Bearer token_utente

body {
  "new_role": "Airline-Admin"
}

Attenzione:
new_role acetta solo SOLO: Admin, User, Airline-Admin

risposta 200

{
    "message": "Role changed"
}

------------------------------------------------------------------------------------------------------------------

7) aircraft/  methods=["GET"]

API che permette di ottenere i dati di tutti gli aerei disponibili sul db in formato JSON. Guardare API numero 9 per aerei filtrati tramite produttore.

Ruoli -> Admin, Airline-Admin

Authorization Bearer token_utente

risposta 200

[
      {
        "cabin_max_cols": 7,
        "double_deck": false,
        "id_aircraft": 1,
        "manufacturer": {
            "id_manufacturer": 1,
            "name": "Airbus"
        },
        "max_economy_seats": 180,
        "name": "A320"
    },
    {
        "cabin_max_cols": 7,
        "double_deck": false,
        "id_aircraft": 2,
        "manufacturer": {
            "id_manufacturer": 1,
            "name": "Airbus"
        },
        "max_economy_seats": 160,
        "name": "A319"
    },
    {
        "cabin_max_cols": 7,
        "double_deck": false,
        "id_aircraft": 3,
        "manufacturer": {
            "id_manufacturer": 1,
            "name": "Airbus"
        },
        "max_economy_seats": 244,
        "name": "A321"
    }
]

Spiegazione dati:

double_deck -> indica se l'aereo ha doppio piano oppure new_role 
max_economy_seats -> indica il massimo di sedili classe economy può avere. Perchè questo dato è importante?
Ogni classe economy, first, business, ecc... hanno un tipo di sedili diversi per dimensione a quelli economy (un business equivale a 4 economy). Il costruttore indica quindi il massiomo numero consentito di sedili economy poi la compagnia aerea deciderà come organizzarsi.

------------------------------------------------------------------------------------------------------------------

8) /manufacturer/  methods=["GET"]

API che permette di ottenere i dati di tutti i costruttori disponibili sul db in formato JSON. 

Ruoli -> Admin, Airline-Admin

Authorization Bearer token_utente

risposta 200

[
    {
        "id_manufacturer": 1,
        "name": "Airbus"
    },
    {
        "id_manufacturer": 2,
        "name": "Boeing"
    },
    {
        "id_manufacturer": 3,
        "name": "Embraer"
    },
    {
        "id_manufacturer": 4,
        "name": "Bombardier"
    },
    {
        "id_manufacturer": 5,
        "name": "Comac"
    }
]

------------------------------------------------------------------------------------------------------------------

9) aircraft/manufacturer/<int:id_manufacturer> methods=["GET"]

API che permette di ottenere i dati di tutti gli aerei disponibili ma solo di un produttore, passato con il suo id. Si può vedere come API numero 7 ma filtrata 

API che permette di ottenere i dati di tutti i costruttori disponibili sul db in formato JSON. 

Ruoli -> Admin, Airline-Admin

Authorization Bearer token_utente

risposta 200

[

    {
        "double_deck": false,
        "id_aircraft": 1,
        "max_economy_seats": 180,
        "name": "A320"
    },
    {
        "double_deck": false,
        "id_aircraft": 2,
        "max_economy_seats": 160,
        "name": "A319"
    },
    {
        "double_deck": false,
        "id_aircraft": 3,
        "max_economy_seats": 244,
        "name": "A321"
    }

]

------------------------------------------------------------------------------------------------------------------

10) /airline/ methods=["GET"]

API che ti permette di ottenere tutte le compagnie aeree presenti sul db in frormato JSON

Ruoli -> Admin

Authorization Bearer token_utente

risposta 200

[
    {
        "iata_code": "SR",
        "name": "Sundair"
    },
    {
        "iata_code": "WR",
        "name": "WestJet Encore"
    },
    {
        "iata_code": "CY",
        "name": "Cyprus Airways"
    },
    {
        "iata_code": "JY",
        "name": "interCaribbean Airways"
    }
]

------------------------------------------------------------------------------------------------------------------

11) /airline/new methods=["POST"]

API che inserisce una nuova compagnia aerea sul db

Ruoli -> Admin

Authorization Bearer token_utente

body {
   "iata_code" : "S9",
   "name" : "Straw-hats Airline"
}

iata_code è formato solo da 2 caratteri

risposta 200

{
    "airline": {
        "iata_code": "S9",
        "name": "Straw-hats Airline"
    },
    "message": "airline inserted"
}

------------------------------------------------------------------------------------------------------------------

12) /airline/add/aircraft/<int:id_aircraft> methods=["POST"]

API che permette di aggiungere un aereo alla flotta di una compagnia aerea.
<int:id_aircraft> -> id dell'aereo che si vuole aggiungere alla flotta

Ruoli -> Airline-Admin

Authorization Bearer token_utente

body {
    "airline_code" : "AZ",
    "current_position" : "VCE"
}

current_position -> rappresenta l'areoporto dove il nuovo aereo si troverà

risposta 200

{
    "aircraft": {
        "aircraft": {
            "double_deck": false,
            "id_aircraft": 1,
            "manufacturer": {
                "id_manufacturer": 1,
                "name": "Airbus"
            },
            "max_economy_seats": 180,
            "name": "A320"
        },
        "airline": {
            "iata_code": "AZ",
            "name": "Alitalia"
        },
        "current_position": "MXP",
        "flying_towards": null,
        "id_aircraft_airline": 5
    },
    "message": "aircraft inserted successfully"
}

------------------------------------------------------------------------------------------------------------------

13) /airline/fleet methods=["GET"]

API che permette di ricevere  gli aerei di una flotta di una airline.

Ruoli -> Airline-Admin

Authorization Bearer token_utente

body {
    "airline_code" : "AZ"
}

risposta 200

{
    "aircraft": {
            "double_deck": false,
            "id_aircraft": 7,
            "manufacturer": {
                "id_manufacturer": 1,
                "name": "Airbus"
            },
            "max_economy_seats": 480,
            "name": "A350-1000"
        },
        "airline": {
            "iata_code": "AZ",
            "name": "Alitalia"
        },
        "current_position": "VCE",
        "flying_towards": null,
        "id_aircraft_airline": 1
    },
    {
        "aircraft": {
            "double_deck": false,
            "id_aircraft": 8,
            "manufacturer": {
                "id_manufacturer": 2,
                "name": "Boeing"
            },
            "max_economy_seats": 189,
            "name": "737-800"
        },
        "airline": {
            "iata_code": "AZ",
            "name": "Alitalia"
        },
        "current_position": "VCE",
        "flying_towards": null,
        "id_aircraft_airline": 2
    }
}

In caso di nessun aereo nella flotta restituisce []

------------------------------------------------------------------------------------------------------------------

14) /airline/delete/aircraft/<int:id_aircraft_airline> methods=["DELETE"]

API che elimina un aereo dalla flotta della compagnia

Ruoli -> Airline-Admin

Authorization Bearer token_utente

body {
    "airline_code" : "AZ"
}

risposta 200

{
    "message": "aircraft deleted from the fleet successfully"
}

------------------------------------------------------------------------------------------------------------------

15) /airline/add/block/aircraft/<int:id_aircraft_airline> methods=["POST"]

API che serve per creare un blocco di posti in un aerea dell'aereo.
Dato che gli aerei sono divisi in classi, noi faremo lo stesso con il nostro aereo che selezioniamo tramite id_aircraft_airline.

Ruoli -> Airline-Admin

Authorization Bearer token_utente

body {
    "matrix" : [
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true],
    [true, true, true,false,true, true, true]
  ],
  "proportion_economy_seat": 1,
  "id_class": 4

}

la matrice rappresenta i posti del blocco dove true stà per posto mentre false per il corridoio.
Come faccio a sapere quanto grande fare la matrice?
Ogni aereo ha una dimensione massima di colonne, che sulle tabella pernde il nome di: cabin_max_cols

Esempio, A321 ha cabin_max_cols = 7
    {
        "cabin_max_cols": 7,
        "double_deck": false,
        "id_aircraft": 3,
        "manufacturer": {
            "id_manufacturer": 1,
            "name": "Airbus"
        },
        "max_economy_seats": 244,
        "name": "A321"
    }

guardare API numero 7 oppure aircraft.json in dataset per più esempi.

Perchè proprio il valore 7?
A321 è il classico aereo per voli brevi quindi ha una composizione di questo modo:

sedile-sedile-sedile-corridoio-sedile-sedile-sedile

ATTENZIONE-> si tiene in conto anche dei corridoi, infatti cabin_max_cols = 7 e non a 6.

per quanto riguarda la dimensione delle righe quella è illimitata, ma non deve mai superare il max_economy_seats (guardare esempio dell'A321)
ovvio però che i posti vengono sommati tra i blocchi. Non sarà possiblile creare un blocco con 244 e poi crearne altri.

proportion_economy_seat invece serve a indicare quanto grandi sono i sedili delle altre classi.
Se abbiamo un blocco in Business, logicamente i sedili saranno più grandi mettiamo per esempio che sono 3 volte più grandi.
Allora poniamo proportion_economy_seat = 3.
ATTENZIONE -> adesso un sedile vale 3 celle quindi al riga della matrice:
[true,false,true] occupa 6 posti in economy che vanno a sottrarsi a max_economy_seats e occupano 7 colonne.

id_class indica id alla classe, la classe economy ha id 4, se si pone id_class = 4 allora  proportion_economy_seat deve essere uguale a 1

risposta 200

{
    "message": "Block inserted successfully"
}

------------------------------------------------------------------------------------------------------------------

16) /airline/aircraft/<int:id_aircraft_airline>/seat_map methods=["GET"]

restituisce la seat_map dell'aereo della flotta con id = aircraft_airline

Ruoli -> Airline-Admin

Authorization Bearer token_utente

per vedere la risposta completa andare nella cartella dataset/seat_map.json

{
"additional_seats_remaining": 40.0,
"seats_number": 140.0
"seat_map": [
        {
            "class_name": "First",
            "cols": 3,
            "id_cell_block": 5,
            "id_class": 1,
            "proportion_economy_seat": 3.0,
            "rows": 5
             "cells": [
             {
                    "id_cell": 1,
                    "is_seat": true,
                    "x": 0,
                    "y": 0
             },
             {
                    "id_cell": 2,
                    "is_seat": false,
                    "x": 1,
                    "y": 0
             },
             {Tutte le altre celle},
             ]

        },
    {Tutti gli altri blocchi},
]
}

------------------------------------------------------------------------------------------------------------------

17) /airline/aircraft/clone-seatmap methods=["POST"]

ATTENZIONE questa API utilizza delle query non ottimizzate poichè nel db non sono ancora stati inseriti indici, è possibile che possa richiedere più di 15 sec.
tempo per eliminare 150 record -> 12.24 sec

Ruoli -> Airline-Admin

Authorization Bearer token_utente

API che permette di copiare la disposizione dei blocchi e posizione sedili da un aereo ad un altro.
Praticamente se ho 2 aerei A e B dove:
A = source
B = target

B compierà la seat_map di A senza dover usare API 15 ovvero: /airline/add/block/aircraft/<int:id_aircraft_airline>

ATTENZIONE se è già presente una configurazione dei posti di target, essa verà cancellata e sostituita con quella di A.

body {
  "source_id" : 4,
  "target_id" : 3

}

risposta 201

{
    "message": "Operation successful 3 copied blocks"
}

------------------------------------------------------------------------------------------------------------------

18) /route/add  methods=["POST"]

Ruoli -> Airline-Admin, Admin

Authorization Bearer token_utente

API che permette di aggiungere le tratte di una rotta

body {
  "departure_airport": "IST",
  "arrival_airport": "HND"
}

risposta 200

{
    "message": "route inserted successfully",
    "route": {
        "code_arrival_airport": "HND",
        "code_departure_airport": "IST",
        "id_routes_section": 2
    }
}